name: Run Ubuntu Server with XFCE and RustDesk

on: [push]

jobs:
  run-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Removing older version of docker from machine
        run: |
          for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done
      - name: Adding Docker's official GPG key
        run: |
          # Add Docker's official GPG key:
          sudo install -m 0755 -d /etc/apt/keyrings
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          sudo chmod a+r /etc/apt/keyrings/docker.asc

          # Add the repository to Apt sources:
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

      - name: Update and upgrade APT
        run: |
          sudo apt-get update
          sudo apt-get upgrade -y

      - name: Install ca-certificates, curl and nano
        run: |
          sudo apt-get install ca-certificates curl nano

      - name: Install docker
        run: |
          sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

      - name: Set up SSH
        run: |
          echo "root:${{ secrets.ROOT_PASSWORD }}" | sudo chpasswd
          sudo sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
          sudo service ssh restart

      - name: Install xubuntu-desktop
        run: |
          sudo apt-get install xubuntu-desktop
          
      - name: Install RustDesk
        run: |
          wget https://raw.githubusercontent.com/techahold/rustdeskinstall/master/install.sh
          chmod +x install.sh
          ./install.sh

      - name: Start RustDesk and Get ID
        run: |
          rustdesk &  # Start RustDesk in the background
          sleep 10     # Wait for RustDesk to initialize
          RUSTDESK_ID=$(rustdesk --print-id)
          echo "RustDesk ID: $RUSTDESK_ID"

      - name: Update No-IP DDNS
        env:
          NOIP_USERNAME: ${{ secrets.NOIP_USERNAME }}
          NOIP_PASSWORD: ${{ secrets.NOIP_PASSWORD }}
          HOSTNAME: ${{ secrets.NOIP_HOSTNAME }}
        run: |
          IP=$(curl -s ifconfig.me)
          curl -u "$NOIP_USERNAME:$NOIP_PASSWORD" "http://dynupdate.no-ip.com/nic/update?hostname=$HOSTNAME&myip=$IP"

      - name: Run Shadowsocks Docker Container (Optional)
        run: |
          sudo docker run -e PASSWORD=khantmgmg1412 -p 6187:8388 -p 6187:8388/udp -d shadowsocks/shadowsocks-libev

      - name: View Firewall Status and Allow Ports
        run: |
          sudo ufw status
          sudo ufw allow ssh
          sudo ufw allow 3389/tcp  # Open port for RDP (Remote Desktop Protocol)

      - name: Display SSH access information (with DNS check)
        run: |
          # Check if DNS resolves to the server's IP address
          ip_address=$(nslookup githububuntu.ddns.net | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')
          if [[ ! -z "$ip_address" ]]; then
            echo "SSH into the server using the following command:"
            echo "ssh root@${ip_address} -p 22"
            echo "Connect to your Ubuntu server using RustDesk with ID: $RUSTDESK_ID"
            echo "**Note:** You can also access the server's GUI using RDP from a Windows machine by connecting to the server's IP address on port 3389."
          else
            echo "Warning: DNS resolution failed for githububuntu.ddns.net. SSH access information might be inaccurate."
          fi

      - name: Run Python script
        run: |
          # Create the Python script
          touch python_script.py
          echo "import time
  
          while True:
              print('Python script executed')
              time.sleep(60)" > python_script.py
  
          # Run the script and capture its output
          output=$(python3 python_script.py)
  
          # Print the output to the console
          echo "$output"
